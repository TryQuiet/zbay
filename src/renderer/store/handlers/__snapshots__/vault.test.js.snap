// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`vault reducer epics - createVault bootstraps general channel to new account 1`] = `
Immutable.List [
  Immutable.Map {
    "private": true,
    "name": "general",
    "onlyRegistered": false,
    "unread": 0,
    "lastSeen": "2019-03-07T13:03:48.000Z",
    "advertFee": 0,
    "keys": Immutable.Map {
      "ivk": "zivktestsapling1algnz2x84pqcnfdxrlntw73wpuqm3v568cepf5tuctyusm9javpqyjyzqy",
    },
    "address": "ztestsapling1dfjv308amnk40s89trkvz646ne69553us0g858mmpgsw540efgftn4tf25gts2cttg3jgk9y8lx",
    "showInfoMsg": true,
    "description": "This is a general channel available to all users of Zbay by default.",
  },
]
`;

exports[`vault reducer epics - createVault creates identity and sets balance 1`] = `
Immutable.IdentityState {
  "data": Immutable.Identity {
    "id": "thisisatestid",
    "address": "sapling-private-address",
    "transparentAddress": "transparent-address",
    "signerPrivKey": "KbtPfOrzAoAkbZxsNt/VdIp3J5owzgCFcm5PRs4iYBQ=",
    "signerPubKey": "Ay4dSDZfpd9qRDxc80nDE4Ee+PGZ3aY4h3uxONDcBnK2",
    "name": "74657374",
    "shippingData": Immutable.ShippingData {
      "firstName": "",
      "lastName": "",
      "street": "",
      "country": "",
      "region": "",
      "city": "",
      "postalCode": "",
    },
    "balance": "2.2352",
    "lockedBalance": "0",
    "donationAllow": true,
    "shieldingTax": true,
    "donationAddress": "",
    "freeUtxos": 0,
  },
  "fetchingBalance": false,
  "loader": Immutable.Record {
    "loading": false,
    "message": "Loading users and messages",
  },
  "errors": "",
}
`;

exports[`vault reducer epics - createVault creates the vault 1`] = `
Array [
  Array [
    Object {
      "masterPassword": "74657374",
      "network": "testnet",
    },
  ],
]
`;

exports[`vault reducer epics - createVault unlocks the vault 1`] = `
Array [
  Array [
    Object {
      "createSource": true,
      "masterPassword": "74657374",
      "network": "testnet",
    },
  ],
]
`;

exports[`vault reducer handles clear error 1`] = `
Immutable.VaultState {
  "exists": null,
  "creating": false,
  "unlocking": false,
  "creatingIdentity": false,
  "locked": true,
  "isLogIn": false,
  "error": "",
}
`;

exports[`vault reducer handles createIdentity 1`] = `
Immutable.VaultState {
  "exists": null,
  "creating": false,
  "unlocking": false,
  "creatingIdentity": false,
  "locked": true,
  "isLogIn": false,
  "error": "",
}
`;

exports[`vault reducer handles createIdentity error 1`] = `
Immutable.VaultState {
  "exists": null,
  "creating": false,
  "unlocking": false,
  "creatingIdentity": false,
  "locked": true,
  "isLogIn": false,
  "error": "This is a test error",
}
`;

exports[`vault reducer handles createVault 1`] = `
Immutable.VaultState {
  "exists": true,
  "creating": false,
  "unlocking": false,
  "creatingIdentity": false,
  "locked": true,
  "isLogIn": false,
  "error": "",
}
`;

exports[`vault reducer handles createVault error 1`] = `
Immutable.VaultState {
  "exists": null,
  "creating": false,
  "unlocking": false,
  "creatingIdentity": false,
  "locked": true,
  "isLogIn": false,
  "error": "This is a test error",
}
`;

exports[`vault reducer handles createVault with loading state 1`] = `
Immutable.VaultState {
  "exists": null,
  "creating": false,
  "unlocking": false,
  "creatingIdentity": false,
  "locked": true,
  "isLogIn": false,
  "error": "",
}
`;

exports[`vault reducer handles pending createIdentity 1`] = `
Immutable.VaultState {
  "exists": null,
  "creating": false,
  "unlocking": false,
  "creatingIdentity": false,
  "locked": true,
  "isLogIn": false,
  "error": "",
}
`;

exports[`vault reducer handles unlockVault 1`] = `
Immutable.VaultState {
  "exists": true,
  "creating": false,
  "unlocking": false,
  "creatingIdentity": false,
  "locked": false,
  "isLogIn": false,
  "error": "",
}
`;

exports[`vault reducer handles unlockVault error 1`] = `
Immutable.VaultState {
  "exists": true,
  "creating": false,
  "unlocking": false,
  "creatingIdentity": false,
  "locked": true,
  "isLogIn": false,
  "error": "This is a test error",
}
`;

exports[`vault reducer handles unlockVault with unlocking state 1`] = `
Immutable.VaultState {
  "exists": true,
  "creating": false,
  "unlocking": false,
  "creatingIdentity": false,
  "locked": true,
  "isLogIn": false,
  "error": "",
}
`;

exports[`vault reducer handles updateIdentitySignerKeys 1`] = `
Object {
  "address": "saturn-private-address",
  "id": "test id",
  "keys": Object {
    "sk": "saturn-sk",
    "tpk": "saturn-tpk",
  },
  "name": "Saturn",
  "signerPrivKey": "AyrXTov+4FEyle1BrxndDhePlUOB1nPV5YvyexC8m6E=",
  "signerPubKey": "Alw9G29ahXm5et9T7FJF3lbXVXNkapR826yPtfMVJYnK",
  "transparentAddress": "saturn-transparent-address",
}
`;

exports[`vault reducer handles updateIdentitySignerKeys 2`] = `
Immutable.VaultState {
  "exists": null,
  "creating": false,
  "unlocking": false,
  "creatingIdentity": false,
  "locked": true,
  "isLogIn": false,
  "error": "",
}
`;
