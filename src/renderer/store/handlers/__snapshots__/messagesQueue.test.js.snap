// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Messages queue reducer handles actions - addMessage when different channel 1`] = `
Immutable.Map {
  "9fa77ca0b21bbb47950efb6b5c44781682b0346a4c66a2314b4907b8c679479e": Immutable.PendingMessage {
    "channelId": "test-channel-id",
    "message": Immutable.Map {
      "id": "test-message-id",
      "type": 1,
      "createdAt": 1551963828,
      "message": "This is some message test-message-id",
      "signature": Object {
        "data": Array [
          202,
          15,
          119,
          117,
          178,
          163,
          37,
          253,
          154,
          252,
          231,
          166,
          195,
          137,
          183,
          234,
          71,
          243,
          80,
          122,
          59,
          238,
          222,
          166,
          186,
          69,
          90,
          160,
          160,
          50,
          104,
          190,
          10,
          207,
          36,
          153,
          83,
          108,
          75,
          44,
          43,
          251,
          163,
          248,
          121,
          50,
          116,
          127,
          154,
          101,
          218,
          181,
          222,
          56,
          194,
          169,
          79,
          74,
          219,
          181,
          87,
          23,
          91,
          207,
        ],
        "type": "Buffer",
      },
    },
  },
  "a367201120e164b06eab181e40e6a0d437522bedba4ad3d47e361afe8f37b4b7": Immutable.PendingMessage {
    "channelId": "test-channel-id-2",
    "message": Immutable.Map {
      "id": "test-message-id-2",
      "type": 1,
      "createdAt": 1551963829,
      "message": "This is some message test-message-id-2",
      "signature": Object {
        "data": Array [
          93,
          229,
          160,
          223,
          47,
          10,
          65,
          174,
          71,
          112,
          184,
          230,
          247,
          84,
          67,
          130,
          157,
          4,
          33,
          195,
          30,
          65,
          144,
          47,
          131,
          90,
          154,
          213,
          24,
          180,
          246,
          234,
          127,
          112,
          70,
          23,
          253,
          17,
          207,
          91,
          184,
          206,
          3,
          81,
          254,
          9,
          112,
          222,
          134,
          123,
          230,
          112,
          178,
          116,
          203,
          168,
          175,
          240,
          4,
          241,
          69,
          17,
          27,
          101,
        ],
        "type": "Buffer",
      },
    },
  },
}
`;

exports[`Messages queue reducer handles actions - addMessage when different sender 1`] = `
Immutable.Map {
  "9fa77ca0b21bbb47950efb6b5c44781682b0346a4c66a2314b4907b8c679479e": Immutable.PendingMessage {
    "channelId": "test-channel-id",
    "message": Immutable.Map {
      "id": "test-message-id-2",
      "type": 1,
      "createdAt": 1551963829,
      "message": "This is some message test-message-id-2",
      "signature": Object {
        "data": Array [
          93,
          229,
          160,
          223,
          47,
          10,
          65,
          174,
          71,
          112,
          184,
          230,
          247,
          84,
          67,
          130,
          157,
          4,
          33,
          195,
          30,
          65,
          144,
          47,
          131,
          90,
          154,
          213,
          24,
          180,
          246,
          234,
          127,
          112,
          70,
          23,
          253,
          17,
          207,
          91,
          184,
          206,
          3,
          81,
          254,
          9,
          112,
          222,
          134,
          123,
          230,
          112,
          178,
          116,
          203,
          168,
          175,
          240,
          4,
          241,
          69,
          17,
          27,
          101,
        ],
        "type": "Buffer",
      },
    },
  },
}
`;

exports[`Messages queue reducer handles actions - addMessage when different type 1`] = `
Immutable.Map {
  "9fa77ca0b21bbb47950efb6b5c44781682b0346a4c66a2314b4907b8c679479e": Immutable.PendingMessage {
    "channelId": "test-channel-id",
    "message": Immutable.Map {
      "id": "test-message-id",
      "type": 1,
      "createdAt": 1551963828,
      "message": "This is some message test-message-id",
      "signature": Object {
        "data": Array [
          202,
          15,
          119,
          117,
          178,
          163,
          37,
          253,
          154,
          252,
          231,
          166,
          195,
          137,
          183,
          234,
          71,
          243,
          80,
          122,
          59,
          238,
          222,
          166,
          186,
          69,
          90,
          160,
          160,
          50,
          104,
          190,
          10,
          207,
          36,
          153,
          83,
          108,
          75,
          44,
          43,
          251,
          163,
          248,
          121,
          50,
          116,
          127,
          154,
          101,
          218,
          181,
          222,
          56,
          194,
          169,
          79,
          74,
          219,
          181,
          87,
          23,
          91,
          207,
        ],
        "type": "Buffer",
      },
    },
  },
  "a3e3af3aeb0c72ad570fbe4e0984f40ac78a0b472baf246a9745a417c4137864": Immutable.PendingMessage {
    "channelId": "test-channel-id",
    "message": Immutable.Map {
      "id": "test-message-id-2",
      "type": 2,
      "createdAt": 1551963829,
      "message": "This is some message test-message-id-2",
      "signature": Object {
        "data": Array [
          93,
          229,
          160,
          223,
          47,
          10,
          65,
          174,
          71,
          112,
          184,
          230,
          247,
          84,
          67,
          130,
          157,
          4,
          33,
          195,
          30,
          65,
          144,
          47,
          131,
          90,
          154,
          213,
          24,
          180,
          246,
          234,
          127,
          112,
          70,
          23,
          253,
          17,
          207,
          91,
          184,
          206,
          3,
          81,
          254,
          9,
          112,
          222,
          134,
          123,
          230,
          112,
          178,
          116,
          203,
          168,
          175,
          240,
          4,
          241,
          69,
          17,
          27,
          101,
        ],
        "type": "Buffer",
      },
    },
  },
}
`;

exports[`Messages queue reducer handles actions - addMessage when empty 1`] = `
Immutable.Map {
  "9fa77ca0b21bbb47950efb6b5c44781682b0346a4c66a2314b4907b8c679479e": Immutable.PendingMessage {
    "channelId": "test-channel-id",
    "message": Immutable.Map {
      "id": "test-message-id",
      "type": 1,
      "createdAt": 1551963828,
      "message": "This is some message test-message-id",
      "signature": Object {
        "data": Array [
          202,
          15,
          119,
          117,
          178,
          163,
          37,
          253,
          154,
          252,
          231,
          166,
          195,
          137,
          183,
          234,
          71,
          243,
          80,
          122,
          59,
          238,
          222,
          166,
          186,
          69,
          90,
          160,
          160,
          50,
          104,
          190,
          10,
          207,
          36,
          153,
          83,
          108,
          75,
          44,
          43,
          251,
          163,
          248,
          121,
          50,
          116,
          127,
          154,
          101,
          218,
          181,
          222,
          56,
          194,
          169,
          79,
          74,
          219,
          181,
          87,
          23,
          91,
          207,
        ],
        "type": "Buffer",
      },
    },
  },
}
`;

exports[`Messages queue reducer handles actions - addMessage when has matching message 1`] = `
Immutable.Map {
  "9fa77ca0b21bbb47950efb6b5c44781682b0346a4c66a2314b4907b8c679479e": Immutable.PendingMessage {
    "channelId": "test-channel-id",
    "message": Immutable.Map {
      "id": "test-message-id-2",
      "type": 1,
      "createdAt": 1551963829,
      "message": "This is some message test-message-id-2",
      "signature": Object {
        "data": Array [
          93,
          229,
          160,
          223,
          47,
          10,
          65,
          174,
          71,
          112,
          184,
          230,
          247,
          84,
          67,
          130,
          157,
          4,
          33,
          195,
          30,
          65,
          144,
          47,
          131,
          90,
          154,
          213,
          24,
          180,
          246,
          234,
          127,
          112,
          70,
          23,
          253,
          17,
          207,
          91,
          184,
          206,
          3,
          81,
          254,
          9,
          112,
          222,
          134,
          123,
          230,
          112,
          178,
          116,
          203,
          168,
          175,
          240,
          4,
          241,
          69,
          17,
          27,
          101,
        ],
        "type": "Buffer",
      },
    },
  },
}
`;

exports[`Messages queue reducer handles actions - removeMessage 1`] = `Immutable.Map {}`;

exports[`Messages queue reducer handles epics - addMessage adds and sends message 1`] = `
Immutable.Map {
  "operation-id": Immutable.Operation {
    "opId": "operation-id",
    "type": "pendingMessage",
    "meta": Immutable.Record {
      "message": Immutable.Map {
        "id": "test-message-id",
        "type": 1,
        "createdAt": 1551963828,
        "message": "This is some message test-message-id",
        "signature": Object {
          "data": Array [
            202,
            15,
            119,
            117,
            178,
            163,
            37,
            253,
            154,
            252,
            231,
            166,
            195,
            137,
            183,
            234,
            71,
            243,
            80,
            122,
            59,
            238,
            222,
            166,
            186,
            69,
            90,
            160,
            160,
            50,
            104,
            190,
            10,
            207,
            36,
            153,
            83,
            108,
            75,
            44,
            43,
            251,
            163,
            248,
            121,
            50,
            116,
            127,
            154,
            101,
            218,
            181,
            222,
            56,
            194,
            169,
            79,
            74,
            219,
            181,
            87,
            23,
            91,
            207,
          ],
          "type": "Buffer",
        },
      },
      "channelId": 1,
    },
    "txId": "test-tx-id",
    "error": Immutable.ZcashError {
      "code": -1,
      "message": "no error",
    },
    "status": "success",
  },
}
`;

exports[`Messages queue reducer handles epics - addMessage debounces sendPendingMessages 1`] = `
Immutable.Map {
  "operation-id": Immutable.Operation {
    "opId": "operation-id",
    "type": "pendingMessage",
    "meta": Immutable.Record {
      "message": Immutable.Map {
        "id": "test-message-id-2",
        "type": 1,
        "createdAt": 1551963828,
        "message": "This is some message test-message-id-2",
        "signature": Object {
          "data": Array [
            93,
            229,
            160,
            223,
            47,
            10,
            65,
            174,
            71,
            112,
            184,
            230,
            247,
            84,
            67,
            130,
            157,
            4,
            33,
            195,
            30,
            65,
            144,
            47,
            131,
            90,
            154,
            213,
            24,
            180,
            246,
            234,
            127,
            112,
            70,
            23,
            253,
            17,
            207,
            91,
            184,
            206,
            3,
            81,
            254,
            9,
            112,
            222,
            134,
            123,
            230,
            112,
            178,
            116,
            203,
            168,
            175,
            240,
            4,
            241,
            69,
            17,
            27,
            101,
          ],
          "type": "Buffer",
        },
      },
      "channelId": 1,
    },
    "txId": "test-tx-id",
    "error": Immutable.ZcashError {
      "code": -1,
      "message": "no error",
    },
    "status": "success",
  },
}
`;

exports[`Messages queue reducer handles epics - addMessage does not debounce after interval 1`] = `
Immutable.Map {
  "operation-id": Immutable.Operation {
    "opId": "operation-id",
    "type": "pendingMessage",
    "meta": Immutable.Record {
      "message": Immutable.Map {
        "id": "test-message-id",
        "type": 1,
        "createdAt": 1551963828,
        "message": "This is some message test-message-id",
        "signature": Object {
          "data": Array [
            202,
            15,
            119,
            117,
            178,
            163,
            37,
            253,
            154,
            252,
            231,
            166,
            195,
            137,
            183,
            234,
            71,
            243,
            80,
            122,
            59,
            238,
            222,
            166,
            186,
            69,
            90,
            160,
            160,
            50,
            104,
            190,
            10,
            207,
            36,
            153,
            83,
            108,
            75,
            44,
            43,
            251,
            163,
            248,
            121,
            50,
            116,
            127,
            154,
            101,
            218,
            181,
            222,
            56,
            194,
            169,
            79,
            74,
            219,
            181,
            87,
            23,
            91,
            207,
          ],
          "type": "Buffer",
        },
      },
      "channelId": 1,
    },
    "txId": "test-tx-id",
    "error": Immutable.ZcashError {
      "code": -1,
      "message": "no error",
    },
    "status": "success",
  },
  "operation-id-2": Immutable.Operation {
    "opId": "operation-id-2",
    "type": "pendingMessage",
    "meta": Immutable.Record {
      "message": Immutable.Map {
        "id": "test-message-id-2",
        "type": 1,
        "createdAt": 1551963828,
        "message": "This is some message test-message-id-2",
        "signature": Object {
          "data": Array [
            93,
            229,
            160,
            223,
            47,
            10,
            65,
            174,
            71,
            112,
            184,
            230,
            247,
            84,
            67,
            130,
            157,
            4,
            33,
            195,
            30,
            65,
            144,
            47,
            131,
            90,
            154,
            213,
            24,
            180,
            246,
            234,
            127,
            112,
            70,
            23,
            253,
            17,
            207,
            91,
            184,
            206,
            3,
            81,
            254,
            9,
            112,
            222,
            134,
            123,
            230,
            112,
            178,
            116,
            203,
            168,
            175,
            240,
            4,
            241,
            69,
            17,
            27,
            101,
          ],
          "type": "Buffer",
        },
      },
      "channelId": 1,
    },
    "txId": "test-tx-id",
    "error": Immutable.ZcashError {
      "code": -1,
      "message": "no error",
    },
    "status": "success",
  },
}
`;

exports[`Messages queue reducer handles epics - sendPendingMessages adds operation observers 1`] = `
Immutable.OrderedMap {
  undefined: Immutable.Operation {
    "opId": "",
    "type": "pendingMessage",
    "meta": Immutable.Record {
      "message": Immutable.Map {
        "id": "test-message-id-2",
        "type": 1,
        "createdAt": 1551963829,
        "message": "This is some message test-message-id-2",
        "signature": Object {
          "data": Array [
            93,
            229,
            160,
            223,
            47,
            10,
            65,
            174,
            71,
            112,
            184,
            230,
            247,
            84,
            67,
            130,
            157,
            4,
            33,
            195,
            30,
            65,
            144,
            47,
            131,
            90,
            154,
            213,
            24,
            180,
            246,
            234,
            127,
            112,
            70,
            23,
            253,
            17,
            207,
            91,
            184,
            206,
            3,
            81,
            254,
            9,
            112,
            222,
            134,
            123,
            230,
            112,
            178,
            116,
            203,
            168,
            175,
            240,
            4,
            241,
            69,
            17,
            27,
            101,
          ],
          "type": "Buffer",
        },
      },
      "channelId": 2,
    },
    "txId": "test-tx-id",
    "error": Immutable.ZcashError {
      "code": -1,
      "message": "no error",
    },
    "status": "success",
  },
}
`;

exports[`Messages queue reducer handles epics - sendPendingMessages clears queue 1`] = `Immutable.Map {}`;

exports[`Messages queue reducer handles epics - sendPendingMessages handles node errors using notifications 1`] = `
Immutable.List [
  Immutable.Map {
    "options": Immutable.Map {
      "persist": false,
      "variant": "error",
      "action": [Function],
    },
    "message": "Couldn't send the message, please check node connection.",
  },
]
`;

exports[`Messages queue reducer handles epics - sendPendingMessages sends messages 1`] = `
Array [
  Array [
    "test address",
    Array [
      Object {
        "address": "zs1testaddress1",
        "amount": "0",
        "memo": "ff01ca0f7775b2a325fd9afce7a6c389b7ea47f3507a3beedea6ba455aa0a03268be0acf2499536c4b2c2bfba3f87932747f9a65dab5de38c2a94f4adbb557175bcf005c8116b4654a785443736e494c4659416f754c3833465346334e54693473543056495753314f4953585368484e7a4e
      },
    ],
    1,
    0.0000025,
  ],
  Array [
    "test address",
    Array [
      Object {
        "address": "zs1testaddress2",
        "amount": "0",
        "memo": "ff015de5a0df2f0a41ae4770b8e6f75443829d0421c31e41902f835a9ad518b4f6ea7f704617fd11cf5bb8ce0351fe0970de867be670b274cba8aff004f145111b65005c8116b5654a785443736e494c4659416f754c3833465346334e54693473543056495753314f4953585368484e7a4e463130674a41434d744466303d
      },
    ],
    1,
    0.0000025,
  ],
]
`;
